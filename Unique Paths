class Solution {
    public int uniquePaths(int m, int n) {
        if(m==1||n==1) return 1;
        int[][] step=new int[m][n];
        step[0][0]=0;
        step[0][1]=1;
        step[1][0]=1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if((i==0&&j==0)||(i==0&&j==1)||(i==1&&j==0)) continue;
                int left=j-1>=0?step[j-1][i]:0;
                int up=i-1>=0?step[j][i-1]:0;
                step[j][i]=left+up;
            }
        }
        return step[m-1][n-1];
    }
}

class Solution {
    public int uniquePaths(int m, int n) {
        double cnt=1;//(m+n-2)!/((m-1)!*(n-1)!);
        for(int i=1;i<m;i++){
           
            cnt=cnt*(n-1+i)/i;
        }
        return (int)cnt;
        
    }
    
}
