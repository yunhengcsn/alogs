//6ms
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length==0||matrix[0].length==0) return false;
        if(target<matrix[0][0]||target>matrix[matrix.length-1][matrix[0].length-1]) return false;
        int i=0,j=0;
        for(i=0;i<matrix.length;i++){
            if(target==matrix[i][0]) return true;
            else if(target<matrix[i][0]) break;
        }
        i--;
        for(j=1;j<matrix[0].length;j++){
            if(target==matrix[i][j]) return true;
        }
        return false;
    }
}

//6ms
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length==0||matrix[0].length==0) return false;
        if(target<matrix[0][0]||target>matrix[matrix.length-1][matrix[0].length-1]) return false;
        if(target==matrix[0][0]||target==matrix[matrix.length-1][matrix[0].length-1]) return true;
        int num=matrix.length*matrix[0].length;
        
        int lo=0,hi=num-1;
        while(lo<hi){
            int mid=(lo+hi)/2;
           
            if(target==matrix[mid/matrix[0].length][mid%matrix[0].length]) return true;
            else if(target>matrix[mid/matrix[0].length][mid%matrix[0].length]) lo=mid+1;
            else hi=mid;
           
        }
        return false;
    }
}
