//one pass 9ms

class Solution {
     public ListNode removeNthFromEnd(ListNode head, int n) {
      ListNode dummy = new ListNode(0);
      dummy.next = head;
      ListNode first = dummy;
      ListNode second = dummy;
      // Advances first pointer so that the gap between first and second is n nodes apart
      for (int i = 1; i <= n + 1; i++) {
          first = first.next;
      }
      // Move first to the end, maintaining the gap
      while (first != null) {
          first = first.next;
          second = second.next;
      }
      second.next = second.next.next;
      return dummy.next;
  }
}


//cns two pass 8ms
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode rear=head;
        int len=1;
        while(rear.next!=null) {
            rear=rear.next;
            len++;
        }
        int m=len-n;
        if(m==0) return head.next;
        rear=head;
        while(m!=1){
            rear=rear.next;
            m--;
        }
        rear.next=rear.next.next;
        return head;
        
    }
}
